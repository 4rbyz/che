namespace Tests
{
    internal class Program
    {
        static void Main(string[] args)
        {

            char[,] map = {
                      {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                      {'#',' ','#','o','o','#',' ',' ',' ',' ',' ',' ','#','C','C','#',' ','#'},
                      {'#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#'},
                      {'#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#'},
                      {'#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#'},
                      {'#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#'},
                      {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                      {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                      {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                      {'#','#','#','#','#','#','#','#','q','q','#','#','#','#','#','#','#','#'}
        };
            Movement(map);

        }
        static void Cursor()
        {
            Console.SetCursorPosition(0, 12);
        }
        static void Movement(char[,] map)
        {
            Console.CursorVisible = false;
            int user_x = 8, user_y = 8;
            int keyIsFound = 0;
            while (true)
            {
                Console.SetCursorPosition(0, 0);
                for (int i = 0; i < map.GetLength(0); i++)
                {
                    for (int j = 0; j < map.GetLength(1); j++)
                    {
                        Console.Write(map[i, j]);
                    }
                    Console.WriteLine();
                }
                Console.SetCursorPosition(user_y, user_x);
                Console.Write("ты");
                ConsoleKeyInfo key = Console.ReadKey();
                switch (key.Key)
                {
                    case ConsoleKey.UpArrow:
                        if (map[user_x - 1, user_y] != '#')
                        {
                            user_x--;
                        }
                        break;
                    case ConsoleKey.DownArrow:
                        if (map[user_x + 1, user_y] != '#')
                        {
                            user_x++;
                        }
                        break;
                    case ConsoleKey.LeftArrow:
                        if (map[user_x, user_y - 1] != '#')
                        {
                            user_y--;
                        }
                        break;
                    case ConsoleKey.RightArrow:
                        if (map[user_x, user_y + 1] != '#')
                        {
                            user_y++;
                        }
                        break;
                }
                Console.Clear();

                if ((map[user_x, user_y] == 'o'))
                {
                    Console.SetCursorPosition(0, 12);
                    Console.Write("Сундук пуст");
                }

                if ((map[user_x, user_y] == 'C'))
                {
                    string solution;
                    if (map[user_x, user_y] == 'C' && keyIsFound == 0)
                    {
                        Console.SetCursorPosition(0, 0);
                        Console.Write("В сундуке найдено: \nКлюч от двери \nЗагадка");
                        Console.WriteLine("\nВзять?\n1.Да\n2.Нет");
                        solution = Console.ReadLine();

                        switch (solution)
                        {
                            case "1":
                                keyIsFound++;
                                Cursor();
                                Console.Write("Подобран ключ");
                                break;
                            case "2":
                                Console.SetCursorPosition(0, 12);
                                Console.Write("Аняняня, ты чё еблан, тут ключ, который поможет открыть дверь");
                                break;
                            default:
                                Cursor();
                                Console.WriteLine("Попробуй снова, нажми любую кнопку для продолжения");
                                Console.ReadKey();
                                Console.Clear();
                                break;
                        }
                    }
                    else if(map[user_x, user_y] == 'C' && keyIsFound > 0)
                    {
                        Console.SetCursorPosition(0, 12);
                        Console.Write("Сундук пуст");
                    }
                }

              
            }
        }


    }
}
